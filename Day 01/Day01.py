print("This is a Print Statment.")

# This is a print functions (predefined functions! )
print('''

This is a print functions (predefined functions! )


print is the function name and inside the paranstes we pass the thing we want to print.


we have used " " to tell the system that its just a text that we have to print it's not hard coded code 

its have to be {STRINGS}

THE "" SHOULD HE OPENED AND CLOSED 

LIKE : print("this will not run and give error as we didn't close the value we want to pass )

''')

#codingrooms.com assignments EXcercise 01

print('''
codingrooms.com assignments EXcercise 01


Example Output
After you have written your code, you should run your program and it should print the following:

Day 1 - Python Print Function
The function is declared like this:
print('what to print')

''')

#Write your code below this line ðŸ‘‡
print(" \nExcercise 01 from CodingRooms ðŸ‘‡ \n ") #\n is backslash and it is used to have a line break and shift the afterward content to next line in the compiler !!!  
print("Day 1 - Python Print Function")
print("The function is declared like this:")
print("print('what to print')")

print(
'''
What i have learn't from this ðŸ‘‡:

Its appers that the whole 3 lines are in single block but they aree in different as they load with some time 

in line { print("print('what to print')") } we have used '' instead of "" as we can use both but we have to make sure that the opening and closing  quotation should be same , as in this line we want to print a ' ' so we used " " as opening and closing quotes  


alternatively we can use vice versa .......


Also , backslash n is used to have a line break and shift the afterward content to next line in the compiler !!!  

''')

#showing the use cases of the \n 
print('''

showing the use cases of the backslashðŸ‘‡

like if i want to print "Hello World !" 4 times 

1st Approach is to do this:

print("Hello World !")
print("Hello World !")
print("Hello World !")
print("Hello World !")

2nd Approach is to  do use backslash:
print("Hello World !{backslash}Hello World !{backslash}Hello World !{backslash}Hello World !")

Lets see the Outputs for the following :



''')
print("1st Approach")

print("Hello World !")
print("Hello World !")
print("Hello World !")
print("Hello World !")

print("2nd  Approach")
print("Hello World !\nHello World !\nHello World !\nHello World !")

# no difference in the output

print(" You can see there is no Difference in the output but we have difference in the code")



# String Manipulation and Code Intelligence
print("String Manipulation and Code IntelligenceðŸ‘‡")

print('''

------------------------------------------------------------------------------------------

We can combine two string in print statement using '+' e.g. print("Hello"+"World")

Doing this the word Hello World is printed as HelloWorld no spaces are there in between but we can make it happer 


1st approach :

------- >>> print("Hello "+"World")

- The first approach is to add a space after Hello within the quotation to make it in considerations

2nd approach :

------- >>> print("Hello"+"World ")

- The second approach is to add a space after World within the quotation to make it in considerations

3rd  approach :

------- >>> print("Hello" + " " + "World ")

- The third approach is to add a blank space within quotes around with + to combine three different Strings in one place to make it in considerations.
- In this case the whole thing is focused in the addon as the separter in nothing but a blank space added within a quotes.



''')


# String Concatenation is a method of taking the strings and merging them into one.

print("String Concatenation is a method of taking the strings and merging them into one.")

#Indentations IN PYTHON 

print("Indentations IN PYTHON  ðŸ‘‡ ")

print('''

In python Programming language we have spaces and that's matter the most (also known as Indentations)

like if we start our print statement not from the start of a line  , rather after some spaces 

like 
   print("Hello World !")
- This is going to give us a error called : IndentationError!
- Indentation is one of the success key to have python !


''')
print("Code Intelligence ðŸ”»")
print('''
Code Intelligence is used to auto complete the code , all text-editor have one of these

- It makes Coding quite easy and Joyful !  
- Its also indicate some error before running the code ( Awesome !)
-Its indicate by some red lines below the coded code . 


''')